================================
        0-add_integer.py
================================

``add_integer(a, b=98)`` is a function that adds 2 integers
and returns the sum of this addition

::

    >>> add_integer = __import__('0-add_integer').add_integer

Non-integers
=============
``a`` and ``b`` must be integers or floats, otherwise raise a
TypeError exception with the message ``a must be an integer``
or ``b must be an integer``

::
    >>> add_integer('a', 1)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(1, 'b')
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(1, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

If both arguments are non-integers and non-floats, a TypeError message is only
printed for the first argument.

::

    >>> add_integer("hello", "there")
    Traceback (most recent call last):
    TypeError: a must be an integer


Integers
=========
``a`` and ``b`` must be first casted to integers if they are float
::
    >>> add_integer(1.3, 2)
    3

    >>> add_integer(1, 2.8)
    3

    >>> add_integer(1.3, 2.8)
    3

    >>> add_integer(1.3)
    99

    >>> add_integer(-1.3)
    97

    >>> add_integer(-1.3, -2)
    -3

